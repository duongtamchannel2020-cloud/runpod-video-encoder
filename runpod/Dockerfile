# Use FFmpeg image with NVENC support directly (compatible with driver 550.x)
FROM jrottenberg/ffmpeg:6.1-nvidia

# Install additional dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    python3-pip \
 && rm -rf /var/lib/apt/lists/*

# Set NVIDIA environment for video encoding
ENV NVIDIA_VISIBLE_DEVICES=all
# Kh√¥ng c·∫ßn display,graphics cho encode
ENV NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
ENV CUDA_VISIBLE_DEVICES=all

# ‚ùóÔ∏èQUAN TR·ªåNG: th√™m ƒë·∫ßy ƒë·ªß ƒë∆∞·ªùng d·∫´n th∆∞ vi·ªán GPU + FFmpeg,
# v√† ƒëƒÉng k√Ω v·ªõi ldconfig ƒë·ªÉ cuInit() kh√¥ng c√≤n "no device"
ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib64:/usr/local/nvidia/lib:/usr/local/cuda/lib64:/opt/ffmpeg/lib:/usr/lib/x86_64-linux-gnu:${LD_LIBRARY_PATH}
RUN echo "/usr/local/nvidia/lib64" > /etc/ld.so.conf.d/nvidia.conf \
 && echo "/usr/local/cuda/lib64"  > /etc/ld.so.conf.d/cuda.conf \
 && echo "/opt/ffmpeg/lib"        > /etc/ld.so.conf.d/ffmpeg.conf \
 && ldconfig

# (ph√≤ng h·ªù) symlink n·∫øu linker ch∆∞a th·∫•y lib trong runtime serverless
RUN [ -e /usr/local/nvidia/lib64/libcuda.so.1 ] && ln -sf /usr/local/nvidia/lib64/libcuda.so.1 /usr/lib/x86_64-linux-gnu/libcuda.so.1 || true
RUN [ -e /usr/local/nvidia/lib64/libnvidia-encode.so.1 ] && ln -sf /usr/local/nvidia/lib64/libnvidia-encode.so.1 /usr/lib/x86_64-linux-gnu/libnvidia-encode.so.1 || true

# Add explicit CUDA runtime paths for device access (t√πy ch·ªçn)
ENV PATH=/usr/local/cuda/bin:${PATH}
ENV CUDA_HOME=/usr/local/cuda
ENV NVIDIA_REQUIRE_CUDA=cuda>=12.0
ENV PYTHONUNBUFFERED=1
ENV NODE_ENV=production

# Install Node.js 18.x
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
 && apt-get install -y nodejs \
 && rm -rf /var/lib/apt/lists/*

# Install RunPod Python SDK
RUN pip3 install --no-cache-dir runpod

# Verify FFmpeg NVENC support during build
RUN echo "üîß Verifying FFmpeg NVENC compatibility..." \
 && ffmpeg -version | head -3 \
 && echo "üîç Available NVENC encoders:" \
 && (ffmpeg -encoders 2>/dev/null | grep nvenc || echo "‚ö†Ô∏è NVENC check will be done at runtime") \
 && echo "‚úÖ FFmpeg with NVENC support ready for runtime"

# Set working directory
WORKDIR /app

# Copy package.json and install Node.js dependencies
# (n·∫øu c√≥ package-lock.json h√£y d√πng: COPY package.json package-lock.json ./ && npm ci --omit=dev)
COPY package.json ./
RUN npm install --production --no-audit --no-fund

# Copy application files
COPY handler.js runpod_wrapper.py ./

# Create encoding workspace
RUN mkdir -p /tmp/encoding

# Override the FFmpeg ENTRYPOINT c·ªßa base image (m·∫∑c ƒë·ªãnh l√† "ffmpeg")
ENTRYPOINT []
CMD ["python3", "runpod_wrapper.py"]
